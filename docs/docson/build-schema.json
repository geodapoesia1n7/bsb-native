{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "module-format": {
            "enum": [
                "commonjs",
                "amdjs",
                "goog"
            ]
        },
        "package-specs": {
            "oneOf": [
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/module-format"
                    },
                    "description": "package output"
                },
                {
                    "enum": [
                        "all"
                    ],
                    "description": "All supported format with default output"
                }
            ]
        },
        "single-ppx-spec" : {
            "type" : "string",
            "description": "the path to ppx binary"
        },
        "ppx-specs" : {
            "type": "array",
            "items": {
                "$ref": "#/definitions/single-ppx-spec"
            }
        },
        "bs-dependencies": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Bucklescript package dependencies"
        },
        "sourceItem": {
            "title": "sourceItem",
            "properties": {
                "dir": {
                    "type": "string"
                },
                "ppx-specs" : {
                    "$ref" : "#/definitions/ppx-specs"
                },
                "files": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "if files are empty, the build tool will populate it automatically, this is useful for initial adoption"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "slow-re": {
                                    "type": "string",
                                    "description": "Regex to glob the patterns, syntax is documented here: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html, if users want to have better performance for incremental build, we would suggest list it explicitly"
                                },
                                "excludes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of strings to be excluded "
                                }
                            },
                            "required": [
                                "slow-re"
                            ]
                        }
                    ]
                },
                "bs-dependencies": {
                    "$ref": "#/definitions/bs-dependencies",
                    "description": "More dependencies added to this group"
                },
                "public": {
                    "oneOf": [
                        {
                            "enum": [
                                "all"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subdirs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sourceItem"
                    }
                },
                "group": {
                    "oneOf": [
                        {
                            "type": "string",
                            "description": "A _unique_ name for each directory to refer as an internal dependency later"
                        },
                        {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "hierachy": {
                                    "type": "boolean",
                                    "description": "When true, all subdirs are considered as a whole as dependency"
                                }
                            }
                        }
                    ]
                },
                "internal-depends": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "internal dependencies, if unspecified, all existing listed source files are considered potential dependencies"
                    }
                }
            },
            "required": [
                "dir",
                "files"
            ]
        },
        "stringArray": {
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    },
    "title": "BuckleScript build configuration",
    "description": "All paths are required for **Unix format**, the build tool will do conversion internally",
    "type": "object",
    "properties": {
        "version": {
            "type": "string",
            "description": "The semantic version of the OCaml library"
        },
        "name": {
            "type": "string",
            "description": "Package name"
        },
        "ocaml-config": {
            "title": "OCaml Configuration format",
            "bs-dependencies": {
                "$ref": "#/definitions/bs-dependencies",
                "description" : "OCaml dependencies applied to all modules inside"
            },            
            "properties": {
                "js-post-build" : {
                    "cmd" : {
                        "type" : "string"
                    },
                    "description": "Experimental, the build system will invoke `cmd ${file}` whenever a ${file} is generated"
                },
                "ppx-flags": {                    
                    "$ref": "#/definitions/ppx-specs",
                    "description": "TODO: ppx flags"
                },
                "bsc-flags": {
                    "$ref": "#/definitions/stringArray",
                    "description": "A list of flags for bsc.exe"
                },
                "package-specs": {
                    "$ref": "#/definitions/package-specs",
                    "description": "TODO: currently only support commonjs"
                },
                "ocamllex": {
                    "type": "string",
                    "description": "Path to ocamllex"
                },
                "ocamlyacc": {
                    "type": "string",
                    "description": "TODO path to ocamlyacc, mly"
                },
                "menhir": {
                    "type": "string",
                    "description": "TODO"
                },
                "refmt": {
                    "type": "string",
                    "description": "Path to refmt"
                },
                "bs-external-includes": {
                    "$ref": "#/definitions/stringArray",
                    "description": "external include directories, which will be applied -I to all compilation units, it is not needed in most cases"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sourceItem"
                    }
                }
            },
            "required": [
                "sources"
            ],
            "additionalProperties": false
        }
    },
    "required": [
        "version",
        "name",
        "ocaml-config"
    ]
}