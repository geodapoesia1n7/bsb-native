// Generated CODE, PLEASE EDIT WITH CARE
'use strict';

var Caml_int64  = require("../runtime/caml_int64");
var Caml_obj    = require("../runtime/caml_obj");
var Pervasives  = require("../stdlib/pervasives");
var Caml_format = require("../runtime/caml_format");
var Mt          = require("./mt");
var Printf      = require("../stdlib/printf");
var $$Array     = require("../stdlib/array");
var Caml_curry  = require("../runtime/caml_curry");
var List        = require("../stdlib/list");

function commutative_mul(result, a, b) {
  return /* Eq */{
          0: /* tuple */[
            result,
            result
          ],
          1: /* tuple */[
            Caml_int64.mul(a, b),
            Caml_int64.mul(b, a)
          ],
          length: 2,
          tag: 0
        };
}

var pairs = Caml_obj.caml_obj_dup(/* array */[
      /* tuple */[
        /* int64 */[
          -1482940033,
          (-1753181728 >>> 0)
        ],
        /* int64 */[
          1831202545,
          (525340320 >>> 0)
        ],
        /* int64 */[
          165328154,
          (634982515 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          2086642202,
          (-45257752 >>> 0)
        ],
        /* int64 */[
          1756378018,
          (-1243123636 >>> 0)
        ],
        /* int64 */[
          1129387921,
          (-162347938 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -2133087767,
          (1358520104 >>> 0)
        ],
        /* int64 */[
          209351581,
          (-814703364 >>> 0)
        ],
        /* int64 */[
          2047885301,
          (-1595781194 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          781938191,
          (-561804740 >>> 0)
        ],
        /* int64 */[
          1243995318,
          (-664434255 >>> 0)
        ],
        /* int64 */[
          965315102,
          (-1752170244 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1526298485,
          (-1173434256 >>> 0)
        ],
        /* int64 */[
          806837349,
          (-241239064 >>> 0)
        ],
        /* int64 */[
          973509509,
          (-1873028186 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1053250751,
          (-1817540358 >>> 0)
        ],
        /* int64 */[
          297218479,
          (-827251842 >>> 0)
        ],
        /* int64 */[
          1353404045,
          (1639039171 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1614556777,
          (1100802137 >>> 0)
        ],
        /* int64 */[
          1812737275,
          (732603925 >>> 0)
        ],
        /* int64 */[
          1686007471,
          (1587408437 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          166521361,
          (-955806000 >>> 0)
        ],
        /* int64 */[
          585926665,
          (-1809921861 >>> 0)
        ],
        /* int64 */[
          1193284387,
          (-1411520656 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1556851713,
          (-2095936707 >>> 0)
        ],
        /* int64 */[
          563693579,
          (-977007627 >>> 0)
        ],
        /* int64 */[
          1423006973,
          (700349737 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          2096650716,
          (-2082262446 >>> 0)
        ],
        /* int64 */[
          1413202597,
          (-275710143 >>> 0)
        ],
        /* int64 */[
          495794945,
          (-843247662 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1149398987,
          (1313884544 >>> 0)
        ],
        /* int64 */[
          556147957,
          (255480485 >>> 0)
        ],
        /* int64 */[
          1711350082,
          (929852288 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          908394614,
          (-1787508521 >>> 0)
        ],
        /* int64 */[
          1053216964,
          (725956947 >>> 0)
        ],
        /* int64 */[
          2145390454,
          (-310080019 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          962684198,
          (1441406688 >>> 0)
        ],
        /* int64 */[
          1528894622,
          (468792198 >>> 0)
        ],
        /* int64 */[
          1893431833,
          (-375108656 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -603570361,
          (-966612576 >>> 0)
        ],
        /* int64 */[
          1842921977,
          (1999781536 >>> 0)
        ],
        /* int64 */[
          1854314037,
          (-1039472903 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1827458543,
          (1187405920 >>> 0)
        ],
        /* int64 */[
          1066436782,
          (-1788999968 >>> 0)
        ],
        /* int64 */[
          1004254249,
          (2020291989 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1818789533,
          (1878451246 >>> 0)
        ],
        /* int64 */[
          247021097,
          (1999625579 >>> 0)
        ],
        /* int64 */[
          1434621550,
          (-1924515318 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1714915951,
          (2103538455 >>> 0)
        ],
        /* int64 */[
          1071186049,
          (45872671 >>> 0)
        ],
        /* int64 */[
          911777108,
          (-1656179703 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          365880810,
          (-344232772 >>> 0)
        ],
        /* int64 */[
          1215123423,
          (1477626470 >>> 0)
        ],
        /* int64 */[
          1155052099,
          (1816687658 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1590309406,
          (1713682280 >>> 0)
        ],
        /* int64 */[
          1236324221,
          (-1964710772 >>> 0)
        ],
        /* int64 */[
          871497139,
          (1538765150 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -1335640207,
          (1074580892 >>> 0)
        ],
        /* int64 */[
          153491040,
          (-1999389012 >>> 0)
        ],
        /* int64 */[
          469100620,
          (1001897781 >>> 0)
        ]
      ]
    ]);

function from_pairs(prefix, pairs) {
  return $$Array.to_list($$Array.mapi(function (i, param) {
                  var b = param[2];
                  var a = param[1];
                  var result = param[0];
                  return /* tuple */[
                          Caml_curry.app2(Printf.sprintf(/* Format */{
                                    0: /* String */{
                                      0: /* No_padding */0,
                                      1: /* Char_literal */{
                                        0: /* "_" */95,
                                        1: /* Int */{
                                          0: /* Int_d */0,
                                          1: /* No_padding */0,
                                          2: /* No_precision */0,
                                          3: /* End_of_format */0,
                                          length: 4,
                                          tag: 4
                                        },
                                        length: 2,
                                        tag: 12
                                      },
                                      length: 2,
                                      tag: 2
                                    },
                                    1: "%s_%d",
                                    length: 2,
                                    tag: 0
                                  }), prefix, i),
                          function () {
                            return commutative_mul(result, a, b);
                          }
                        ];
                }, pairs));
}

var small_pairs = Caml_obj.caml_obj_dup(/* array */[
      /* tuple */[
        /* int64 */[
          0,
          (121 >>> 0)
        ],
        /* int64 */[
          0,
          (11 >>> 0)
        ],
        /* int64 */[
          0,
          (11 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          0,
          (126736 >>> 0)
        ],
        /* int64 */[
          0,
          (356 >>> 0)
        ],
        /* int64 */[
          0,
          (356 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          0,
          (137176406 >>> 0)
        ],
        /* int64 */[
          0,
          (12346 >>> 0)
        ],
        /* int64 */[
          0,
          (11111 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          268435455,
          (-1048576 >>> 0)
        ],
        /* int64 */[
          255,
          (-1 >>> 0)
        ],
        /* int64 */[
          0,
          (1048576 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -268435456,
          (1048576 >>> 0)
        ],
        /* int64 */[
          -256,
          (1 >>> 0)
        ],
        /* int64 */[
          0,
          (1048576 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -639559543,
          (1275262484 >>> 0)
        ],
        /* int64 */[
          1209011959,
          (-1147274043 >>> 0)
        ],
        /* int64 */[
          1831626934,
          (242558724 >>> 0)
        ]
      ]
    ]);

var to_floats = Caml_obj.caml_obj_dup(/* array */[
      /* tuple */[
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        1
      ],
      /* tuple */[
        /* int64 */[
          0,
          (2 >>> 0)
        ],
        2
      ],
      /* tuple */[
        /* int64 */[
          0,
          (4 >>> 0)
        ],
        4
      ],
      /* tuple */[
        /* int64 */[
          0,
          (8 >>> 0)
        ],
        8
      ],
      /* tuple */[
        /* int64 */[
          0,
          (16 >>> 0)
        ],
        16
      ],
      /* tuple */[
        /* int64 */[
          0,
          (32 >>> 0)
        ],
        32
      ],
      /* tuple */[
        /* int64 */[
          0,
          (64 >>> 0)
        ],
        64
      ],
      /* tuple */[
        /* int64 */[
          0,
          (128 >>> 0)
        ],
        128
      ],
      /* tuple */[
        /* int64 */[
          0,
          (256 >>> 0)
        ],
        256
      ],
      /* tuple */[
        /* int64 */[
          0,
          (512 >>> 0)
        ],
        512
      ],
      /* tuple */[
        /* int64 */[
          0,
          (1024 >>> 0)
        ],
        1024
      ],
      /* tuple */[
        /* int64 */[
          0,
          (2048 >>> 0)
        ],
        2048
      ],
      /* tuple */[
        /* int64 */[
          0,
          (4096 >>> 0)
        ],
        4096
      ],
      /* tuple */[
        /* int64 */[
          0,
          (8192 >>> 0)
        ],
        8192
      ],
      /* tuple */[
        /* int64 */[
          0,
          (16384 >>> 0)
        ],
        16384
      ],
      /* tuple */[
        /* int64 */[
          0,
          (32768 >>> 0)
        ],
        32768
      ],
      /* tuple */[
        /* int64 */[
          0,
          (65536 >>> 0)
        ],
        65536
      ],
      /* tuple */[
        /* int64 */[
          0,
          (131072 >>> 0)
        ],
        131072
      ],
      /* tuple */[
        /* int64 */[
          0,
          (262144 >>> 0)
        ],
        262144
      ],
      /* tuple */[
        /* int64 */[
          0,
          (524288 >>> 0)
        ],
        524288
      ],
      /* tuple */[
        /* int64 */[
          0,
          (1048576 >>> 0)
        ],
        1048576
      ],
      /* tuple */[
        /* int64 */[
          0,
          (2097152 >>> 0)
        ],
        2097152
      ],
      /* tuple */[
        /* int64 */[
          0,
          (4194304 >>> 0)
        ],
        4194304
      ],
      /* tuple */[
        /* int64 */[
          0,
          (8388608 >>> 0)
        ],
        8388608
      ],
      /* tuple */[
        /* int64 */[
          0,
          (16777216 >>> 0)
        ],
        16777216
      ],
      /* tuple */[
        /* int64 */[
          0,
          (33554432 >>> 0)
        ],
        33554432
      ],
      /* tuple */[
        /* int64 */[
          0,
          (67108864 >>> 0)
        ],
        67108864
      ],
      /* tuple */[
        /* int64 */[
          0,
          (134217728 >>> 0)
        ],
        134217728
      ],
      /* tuple */[
        /* int64 */[
          0,
          (268435456 >>> 0)
        ],
        268435456
      ],
      /* tuple */[
        /* int64 */[
          0,
          (536870912 >>> 0)
        ],
        536870912
      ],
      /* tuple */[
        /* int64 */[
          0,
          (1073741824 >>> 0)
        ],
        1073741824
      ],
      /* tuple */[
        /* int64 */[
          0,
          (-2147483648 >>> 0)
        ],
        2147483648
      ],
      /* tuple */[
        /* int64 */[
          1,
          (0 >>> 0)
        ],
        4294967296
      ],
      /* tuple */[
        /* int64 */[
          2,
          (0 >>> 0)
        ],
        8589934592
      ],
      /* tuple */[
        /* int64 */[
          4,
          (0 >>> 0)
        ],
        17179869184
      ],
      /* tuple */[
        /* int64 */[
          8,
          (0 >>> 0)
        ],
        34359738368
      ],
      /* tuple */[
        /* int64 */[
          16,
          (0 >>> 0)
        ],
        68719476736
      ],
      /* tuple */[
        /* int64 */[
          32,
          (0 >>> 0)
        ],
        137438953472
      ],
      /* tuple */[
        /* int64 */[
          64,
          (0 >>> 0)
        ],
        274877906944
      ],
      /* tuple */[
        /* int64 */[
          128,
          (0 >>> 0)
        ],
        549755813888
      ],
      /* tuple */[
        /* int64 */[
          256,
          (0 >>> 0)
        ],
        1099511627776
      ],
      /* tuple */[
        /* int64 */[
          512,
          (0 >>> 0)
        ],
        2199023255552
      ],
      /* tuple */[
        /* int64 */[
          1024,
          (0 >>> 0)
        ],
        4398046511104
      ],
      /* tuple */[
        /* int64 */[
          2048,
          (0 >>> 0)
        ],
        8796093022208
      ],
      /* tuple */[
        /* int64 */[
          4096,
          (0 >>> 0)
        ],
        17592186044416
      ],
      /* tuple */[
        /* int64 */[
          8192,
          (0 >>> 0)
        ],
        35184372088832
      ],
      /* tuple */[
        /* int64 */[
          16384,
          (0 >>> 0)
        ],
        70368744177664
      ],
      /* tuple */[
        /* int64 */[
          32768,
          (0 >>> 0)
        ],
        140737488355328
      ],
      /* tuple */[
        /* int64 */[
          65536,
          (0 >>> 0)
        ],
        281474976710656
      ],
      /* tuple */[
        /* int64 */[
          131072,
          (0 >>> 0)
        ],
        562949953421312
      ],
      /* tuple */[
        /* int64 */[
          262144,
          (0 >>> 0)
        ],
        1125899906842624
      ],
      /* tuple */[
        /* int64 */[
          524288,
          (0 >>> 0)
        ],
        2251799813685248
      ],
      /* tuple */[
        /* int64 */[
          1048576,
          (0 >>> 0)
        ],
        4503599627370496
      ],
      /* tuple */[
        /* int64 */[
          2097152,
          (0 >>> 0)
        ],
        9007199254740992
      ],
      /* tuple */[
        /* int64 */[
          4194304,
          (0 >>> 0)
        ],
        18014398509481984
      ],
      /* tuple */[
        /* int64 */[
          8388608,
          (0 >>> 0)
        ],
        36028797018963968
      ],
      /* tuple */[
        /* int64 */[
          16777216,
          (0 >>> 0)
        ],
        72057594037927936
      ],
      /* tuple */[
        /* int64 */[
          33554432,
          (0 >>> 0)
        ],
        144115188075855872
      ],
      /* tuple */[
        /* int64 */[
          67108864,
          (0 >>> 0)
        ],
        288230376151711744
      ],
      /* tuple */[
        /* int64 */[
          134217728,
          (0 >>> 0)
        ],
        576460752303423488
      ],
      /* tuple */[
        /* int64 */[
          268435456,
          (0 >>> 0)
        ],
        1.15292150460684698e+18
      ],
      /* tuple */[
        /* int64 */[
          536870912,
          (0 >>> 0)
        ],
        2.30584300921369395e+18
      ],
      /* tuple */[
        /* int64 */[
          1073741824,
          (0 >>> 0)
        ],
        4.6116860184273879e+18
      ],
      /* tuple */[
        /* int64 */[
          -2147483648,
          (0 >>> 0)
        ],
        -9.22337203685477581e+18
      ]
    ]);

var check_complete_compare = /* int array */[
  Caml_int64.ge(/* int64 */[
        0,
        (3 >>> 0)
      ], /* int64 */[
        0,
        (2 >>> 0)
      ]),
  Caml_int64.ge(/* int64 */[
        0,
        (3 >>> 0)
      ], /* int64 */[
        0,
        (3 >>> 0)
      ]),
  Caml_int64.eq(/* int64 */[
        0,
        (3 >>> 0)
      ], /* int64 */[
        0,
        (3 >>> 0)
      ]),
  Caml_int64.eq(/* int64 */[
        0,
        (2 >>> 0)
      ], /* int64 */[
        0,
        (2 >>> 0)
      ]),
  Caml_int64.lt(/* int64 */[
        0,
        (2 >>> 0)
      ], /* int64 */[
        0,
        (3 >>> 0)
      ]),
  Caml_int64.gt(/* int64 */[
        0,
        (3 >>> 0)
      ], /* int64 */[
        0,
        (2 >>> 0)
      ]),
  Caml_int64.le(/* int64 */[
        0,
        (2 >>> 0)
      ], /* int64 */[
        0,
        (3 >>> 0)
      ]),
  Caml_int64.le(/* int64 */[
        0,
        (3 >>> 0)
      ], /* int64 */[
        0,
        (3 >>> 0)
      ])
];

var of_float_pairs = Caml_obj.caml_obj_dup(/* array */[
      /* tuple */[
        6853066956871844,
        /* int64 */[
          1595603,
          (-40494940 >>> 0)
        ]
      ],
      /* tuple */[
        -8507688874782117,
        /* int64 */[
          -1980851,
          (1388466779 >>> 0)
        ]
      ],
      /* tuple */[
        4083117349607451,
        /* int64 */[
          950674,
          (-684517349 >>> 0)
        ]
      ],
      /* tuple */[
        -4860723193745655,
        /* int64 */[
          -1131726,
          (-1330680055 >>> 0)
        ]
      ],
      /* tuple */[
        7820020192255542,
        /* int64 */[
          1820740,
          (1437736502 >>> 0)
        ]
      ],
      /* tuple */[
        -4908619721514532,
        /* int64 */[
          -1142878,
          (-383163940 >>> 0)
        ]
      ],
      /* tuple */[
        5.67685864687671e+15,
        /* int64 */[
          1321746,
          (-1491709402 >>> 0)
        ]
      ],
      /* tuple */[
        -703696191048023,
        /* int64 */[
          -163843,
          (-159336791 >>> 0)
        ]
      ],
      /* tuple */[
        1123586534990153.88,
        /* int64 */[
          261605,
          (1615520073 >>> 0)
        ]
      ],
      /* tuple */[
        -4.29886533981922e+15,
        /* int64 */[
          -1000908,
          (1786485548 >>> 0)
        ]
      ],
      /* tuple */[
        2.43885138012066e+15,
        /* int64 */[
          567839,
          (1445727316 >>> 0)
        ]
      ],
      /* tuple */[
        -8011538689499494,
        /* int64 */[
          -1865332,
          (1246682778 >>> 0)
        ]
      ],
      /* tuple */[
        2710072285421155,
        /* int64 */[
          630987,
          (-538747293 >>> 0)
        ]
      ],
      /* tuple */[
        -2541457347159789.5,
        /* int64 */[
          -591730,
          (-644065005 >>> 0)
        ]
      ],
      /* tuple */[
        5012932793576708,
        /* int64 */[
          1167164,
          (1584508164 >>> 0)
        ]
      ],
      /* tuple */[
        -943066847413899.125,
        /* int64 */[
          -219575,
          (596605301 >>> 0)
        ]
      ],
      /* tuple */[
        5440257518642004,
        /* int64 */[
          1266658,
          (-1461542060 >>> 0)
        ]
      ],
      /* tuple */[
        -7750676773453898,
        /* int64 */[
          -1804596,
          (-265928778 >>> 0)
        ]
      ],
      /* tuple */[
        8911999221747713,
        /* int64 */[
          2074986,
          (-2082877439 >>> 0)
        ]
      ],
      /* tuple */[
        -1443906702582204.25,
        /* int64 */[
          -336186,
          (1172790852 >>> 0)
        ]
      ],
      /* tuple */[
        659345820712164.875,
        /* int64 */[
          153515,
          (-378700572 >>> 0)
        ]
      ],
      /* tuple */[
        -3284023713149006.5,
        /* int64 */[
          -764622,
          (-1524314190 >>> 0)
        ]
      ],
      /* tuple */[
        5062818438579988,
        /* int64 */[
          1178779,
          (1184368404 >>> 0)
        ]
      ],
      /* tuple */[
        -8904450004162331,
        /* int64 */[
          -2073229,
          (747956453 >>> 0)
        ]
      ],
      /* tuple */[
        848261089308786,
        /* int64 */[
          197501,
          (753381490 >>> 0)
        ]
      ],
      /* tuple */[
        -6376579516657391,
        /* int64 */[
          -1484664,
          (-486076143 >>> 0)
        ]
      ],
      /* tuple */[
        1337907592605664.25,
        /* int64 */[
          311505,
          (-489902112 >>> 0)
        ]
      ],
      /* tuple */[
        -8.54733738833896e+15,
        /* int64 */[
          -1990083,
          (-281980688 >>> 0)
        ]
      ],
      /* tuple */[
        2345417644172927,
        /* int64 */[
          546085,
          (428336767 >>> 0)
        ]
      ],
      /* tuple */[
        -2587460670129294.5,
        /* int64 */[
          -602441,
          (-572327054 >>> 0)
        ]
      ],
      /* tuple */[
        4580431718597436,
        /* int64 */[
          1066464,
          (-578731204 >>> 0)
        ]
      ],
      /* tuple */[
        -1460576044874256.25,
        /* int64 */[
          -340067,
          (598574576 >>> 0)
        ]
      ],
      /* tuple */[
        3403657978343579.5,
        /* int64 */[
          792475,
          (-524521317 >>> 0)
        ]
      ],
      /* tuple */[
        -7.89068917321888e+15,
        /* int64 */[
          -1837195,
          (-1026811456 >>> 0)
        ]
      ],
      /* tuple */[
        1683098350604788.5,
        /* int64 */[
          391876,
          (-548449804 >>> 0)
        ]
      ],
      /* tuple */[
        -3966538891560174.5,
        /* int64 */[
          -923532,
          (845249298 >>> 0)
        ]
      ],
      /* tuple */[
        6726025288963652,
        /* int64 */[
          1566024,
          (-870754748 >>> 0)
        ]
      ],
      /* tuple */[
        -4790410747298403,
        /* int64 */[
          -1115355,
          (-1793835619 >>> 0)
        ]
      ],
      /* tuple */[
        1985858071337706.25,
        /* int64 */[
          462368,
          (-1662346518 >>> 0)
        ]
      ],
      /* tuple */[
        -5281733497873409,
        /* int64 */[
          -1229750,
          (-1760584705 >>> 0)
        ]
      ]
    ]);

var simple_divs = Caml_obj.caml_obj_dup(/* array */[
      /* tuple */[
        /* int64 */[
          0,
          (6 >>> 0)
        ],
        /* int64 */[
          0,
          (3 >>> 0)
        ],
        /* int64 */[
          0,
          (2 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          0,
          (120 >>> 0)
        ],
        /* int64 */[
          0,
          (11 >>> 0)
        ],
        /* int64 */[
          0,
          (10 >>> 0)
        ],
        /* int64 */[
          0,
          (10 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          -2147483648,
          (0 >>> 0)
        ],
        /* int64 */[
          0,
          (2 >>> 0)
        ],
        /* int64 */[
          -1073741824,
          (0 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1112580415,
          (-163100511 >>> 0)
        ],
        /* int64 */[
          2013350321,
          (-1689560617 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          1112580415,
          (-163100511 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          983582600,
          (1414064366 >>> 0)
        ],
        /* int64 */[
          1027627185,
          (720592487 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          983582600,
          (1414064366 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          707587463,
          (-244174718 >>> 0)
        ],
        /* int64 */[
          457824592,
          (-1441985079 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          249762871,
          (1197810361 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          3696312,
          (-452010802 >>> 0)
        ],
        /* int64 */[
          303263066,
          (1932508180 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          3696312,
          (-452010802 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1998955230,
          (530108890 >>> 0)
        ],
        /* int64 */[
          1876081138,
          (-1300251594 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          122874091,
          (1830360484 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1123314058,
          (-1842975846 >>> 0)
        ],
        /* int64 */[
          1077511003,
          (-1636954134 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          45803054,
          (-206021712 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          772515434,
          (-474132284 >>> 0)
        ],
        /* int64 */[
          1485983210,
          (435807891 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          772515434,
          (-474132284 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1437309318,
          (1357533220 >>> 0)
        ],
        /* int64 */[
          1141241105,
          (541080542 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          296068213,
          (816452678 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1559319564,
          (407118687 >>> 0)
        ],
        /* int64 */[
          211092740,
          (-280613636 >>> 0)
        ],
        /* int64 */[
          0,
          (7 >>> 0)
        ],
        /* int64 */[
          81670377,
          (-1923553157 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          897058469,
          (1054256000 >>> 0)
        ],
        /* int64 */[
          57853316,
          (661312616 >>> 0)
        ],
        /* int64 */[
          0,
          (15 >>> 0)
        ],
        /* int64 */[
          29258726,
          (-275498648 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1771820319,
          (-1265124412 >>> 0)
        ],
        /* int64 */[
          1113086871,
          (222584391 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          658733448,
          (-1487708803 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1699471447,
          (-1564422518 >>> 0)
        ],
        /* int64 */[
          1090632987,
          (-398393386 >>> 0)
        ],
        /* int64 */[
          0,
          (1 >>> 0)
        ],
        /* int64 */[
          608838459,
          (-1166029132 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1300122432,
          (837406327 >>> 0)
        ],
        /* int64 */[
          349961722,
          (-433706886 >>> 0)
        ],
        /* int64 */[
          0,
          (3 >>> 0)
        ],
        /* int64 */[
          250237263,
          (2138526985 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1844919629,
          (681013979 >>> 0)
        ],
        /* int64 */[
          141654602,
          (-400929258 >>> 0)
        ],
        /* int64 */[
          0,
          (13 >>> 0)
        ],
        /* int64 */[
          3409791,
          (1598127037 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          876561860,
          (-1067617897 >>> 0)
        ],
        /* int64 */[
          1635137811,
          (1118648885 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          876561860,
          (-1067617897 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          1444234022,
          (1188873919 >>> 0)
        ],
        /* int64 */[
          1506775353,
          (-1845904707 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          1444234022,
          (1188873919 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          216713133,
          (-1338985492 >>> 0)
        ],
        /* int64 */[
          840978153,
          (478170254 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          216713133,
          (-1338985492 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          311131250,
          (-1951260634 >>> 0)
        ],
        /* int64 */[
          1432032601,
          (1397060596 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          311131250,
          (-1951260634 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          702252958,
          (-2040192977 >>> 0)
        ],
        /* int64 */[
          333531300,
          (1983179783 >>> 0)
        ],
        /* int64 */[
          0,
          (2 >>> 0)
        ],
        /* int64 */[
          35190357,
          (-1711585247 >>> 0)
        ]
      ],
      /* tuple */[
        /* int64 */[
          222120797,
          (1357843095 >>> 0)
        ],
        /* int64 */[
          1409050141,
          (-1744534264 >>> 0)
        ],
        /* int64 */[
          0,
          (0 >>> 0)
        ],
        /* int64 */[
          222120797,
          (1357843095 >>> 0)
        ]
      ]
    ]);

function from(xs) {
  return List.mapi(function (i, param) {
              var d = param[3];
              var c = param[2];
              var b = param[1];
              var a = param[0];
              return /* tuple */[
                      Caml_curry.app1(Printf.sprintf(/* Format */{
                                0: /* String_literal */{
                                  0: "small_divs ",
                                  1: /* Scan_get_counter */{
                                    0: /* Token_counter */2,
                                    1: /* End_of_format */0,
                                    length: 2,
                                    tag: 21
                                  },
                                  length: 2,
                                  tag: 11
                                },
                                1: "small_divs %L",
                                length: 2,
                                tag: 0
                              }), i),
                      function () {
                        return /* Eq */{
                                0: /* tuple */[
                                  c,
                                  d
                                ],
                                1: /* tuple */[
                                  Caml_int64.div(a, b),
                                  Caml_int64.mod_(a, b)
                                ],
                                length: 2,
                                tag: 0
                              };
                      }
                    ];
            }, $$Array.to_list(xs));
}

var to_string = /* array */[/* tuple */[
    /* int64 */[
      0,
      (0 >>> 0)
    ],
    "0"
  ]];

var int64_compare_tests = /* array */[
  /* tuple */[
    /* int64 */[
      0,
      (1 >>> 0)
    ],
    /* int64 */[
      0,
      (2 >>> 0)
    ],
    -1
  ],
  /* tuple */[
    /* int64 */[
      0,
      (2 >>> 0)
    ],
    /* int64 */[
      0,
      (1 >>> 0)
    ],
    1
  ],
  /* tuple */[
    /* int64 */[
      0,
      (2 >>> 0)
    ],
    /* int64 */[
      0,
      (1 >>> 0)
    ],
    1
  ]
];

function from_compare(xs) {
  return List.mapi(function (i, param) {
              var c = param[2];
              var b = param[1];
              var a = param[0];
              return /* tuple */[
                      Caml_curry.app1(Printf.sprintf(/* Format */{
                                0: /* String_literal */{
                                  0: "int64_compare ",
                                  1: /* Scan_get_counter */{
                                    0: /* Token_counter */2,
                                    1: /* End_of_format */0,
                                    length: 2,
                                    tag: 21
                                  },
                                  length: 2,
                                  tag: 11
                                },
                                1: "int64_compare %L",
                                length: 2,
                                tag: 0
                              }), i),
                      function () {
                        return /* Eq */{
                                0: c,
                                1: Caml_int64.compare(a, b),
                                length: 2,
                                tag: 0
                              };
                      }
                    ];
            }, $$Array.to_list(xs));
}

function from_to_string(xs) {
  return List.mapi(function (i, param) {
              var str_a = param[1];
              var a = param[0];
              return /* tuple */[
                      Caml_curry.app1(Printf.sprintf(/* Format */{
                                0: /* String_literal */{
                                  0: "to_string ",
                                  1: /* Scan_get_counter */{
                                    0: /* Token_counter */2,
                                    1: /* End_of_format */0,
                                    length: 2,
                                    tag: 21
                                  },
                                  length: 2,
                                  tag: 11
                                },
                                1: "to_string %L",
                                length: 2,
                                tag: 0
                              }), i),
                      function () {
                        return /* Eq */{
                                0: str_a,
                                1: Caml_format.caml_int64_format("%d", a),
                                length: 2,
                                tag: 0
                              };
                      }
                    ];
            }, $$Array.to_list(xs));
}

Mt.from_pair_suites("int64_mul_div_test.ml", Pervasives.$at(from_pairs("random", pairs), Pervasives.$at(from_pairs("small", small_pairs), Pervasives.$at(List.mapi(function (i, param) {
                      var f = param[1];
                      var i64 = param[0];
                      return /* tuple */[
                              Caml_curry.app1(Printf.sprintf(/* Format */{
                                        0: /* String_literal */{
                                          0: "to_float_",
                                          1: /* Int */{
                                            0: /* Int_d */0,
                                            1: /* No_padding */0,
                                            2: /* No_precision */0,
                                            3: /* End_of_format */0,
                                            length: 4,
                                            tag: 4
                                          },
                                          length: 2,
                                          tag: 11
                                        },
                                        1: "to_float_%d",
                                        length: 2,
                                        tag: 0
                                      }), i),
                              function () {
                                return /* Eq */{
                                        0: Caml_int64.to_float(i64),
                                        1: f,
                                        length: 2,
                                        tag: 0
                                      };
                              }
                            ];
                    }, $$Array.to_list(to_floats)), Pervasives.$at(List.mapi(function (i, param) {
                          var i64 = param[1];
                          var f = param[0];
                          return /* tuple */[
                                  Caml_curry.app1(Printf.sprintf(/* Format */{
                                            0: /* String_literal */{
                                              0: "of_float_",
                                              1: /* Int */{
                                                0: /* Int_d */0,
                                                1: /* No_padding */0,
                                                2: /* No_precision */0,
                                                3: /* End_of_format */0,
                                                length: 4,
                                                tag: 4
                                              },
                                              length: 2,
                                              tag: 11
                                            },
                                            1: "of_float_%d",
                                            length: 2,
                                            tag: 0
                                          }), i),
                                  function () {
                                    return /* Eq */{
                                            0: Caml_int64.of_float(f),
                                            1: i64,
                                            length: 2,
                                            tag: 0
                                          };
                                  }
                                ];
                        }, $$Array.to_list(of_float_pairs)), Pervasives.$at(/* :: */[
                          /* tuple */[
                            "compare_check_complete",
                            function () {
                              return /* Eq */{
                                      0: $$Array.map(function () {
                                            return /* true */1;
                                          }, check_complete_compare),
                                      1: check_complete_compare,
                                      length: 2,
                                      tag: 0
                                    };
                            }
                          ],
                          /* [] */0
                        ], Pervasives.$at(from(simple_divs), Pervasives.$at(from_compare(int64_compare_tests), /* :: */[
                                  /* tuple */[
                                    "div_rem_0",
                                    function () {
                                      return /* Eq */{
                                              0: Caml_int64.div(/* int64 */[
                                                    -1,
                                                    (-1 >>> 0)
                                                  ], /* int64 */[
                                                    0,
                                                    (16 >>> 0)
                                                  ]),
                                              1: /* int64 */[
                                                0,
                                                (0 >>> 0)
                                              ],
                                              length: 2,
                                              tag: 0
                                            };
                                    }
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      "div_rem_1",
                                      function () {
                                        return /* Eq */{
                                                0: Caml_int64.mod_(/* int64 */[
                                                      -1,
                                                      (-1 >>> 0)
                                                    ], /* int64 */[
                                                      0,
                                                      (16 >>> 0)
                                                    ]),
                                                1: /* int64 */[
                                                  -1,
                                                  (-1 >>> 0)
                                                ],
                                                length: 2,
                                                tag: 0
                                              };
                                      }
                                    ],
                                    /* [] */0
                                  ]
                                ]))))))));

exports.commutative_mul        = commutative_mul;
exports.pairs                  = pairs;
exports.from_pairs             = from_pairs;
exports.small_pairs            = small_pairs;
exports.to_floats              = to_floats;
exports.check_complete_compare = check_complete_compare;
exports.of_float_pairs         = of_float_pairs;
exports.simple_divs            = simple_divs;
exports.from                   = from;
exports.to_string              = to_string;
exports.int64_compare_tests    = int64_compare_tests;
exports.from_compare           = from_compare;
exports.from_to_string         = from_to_string;
/*  Not a pure module */
